## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Managing Authors Ticket'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/authors/{author_id}/tickets'
    metadata:
      groupName: 'Managing Authors Ticket'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get All Authors'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 9|GdiYU5BHnp4kksTZ3Ovm2ayPSRlmPzNYDFIWrxeh2d8fde3a'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author_id:
        name: author_id
        description: 'The ID of the author.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      author_id: architecto
    queryParameters:
      sort:
        name: sort
        description: 'Data filed(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
        required: false
        example: 'sort=name,-createdAt'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[name]':
        name: 'filter[name]'
        description: 'Filter by title. Wildcards are supported.'
        required: false
        example: '*a*'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      sort: 'sort=name,-createdAt'
      'filter[name]': '*a*'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/localhost\/api\/v1\/authors\/architecto\/tickets?page=1","last":"http:\/\/localhost\/api\/v1\/authors\/architecto\/tickets?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/v1\/authors\/architecto\/tickets?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/v1\/authors\/architecto\/tickets","per_page":15,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 9|GdiYU5BHnp4kksTZ3Ovm2ayPSRlmPzNYDFIWrxeh2d8fde3a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/authors/{author_id}/tickets'
    metadata:
      groupName: 'Managing Authors Ticket'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a Author Ticket'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 9|GdiYU5BHnp4kksTZ3Ovm2ayPSRlmPzNYDFIWrxeh2d8fde3a'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author_id:
        name: author_id
        description: 'The ID of the author.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      author_id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data:
        name: data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes:
        name: data.attributes
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: "The ticket's title (method)."
        required: true
        example: No-example
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: "The ticket's title description."
        required: true
        example: No-example
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: "The ticket's title status."
        required: true
        example: No-example
        type: string
        enumValues:
          - A
          - C
          - X
          - H
        exampleWasSpecified: false
        nullable: false
        custom: []
      author:
        name: author
        description: 'The author assigned to the ticket. The <code>id</code> of an existing record in the users table.'
        required: true
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: No-example
          description: No-example
          status: No-example
      author: 0
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 9|GdiYU5BHnp4kksTZ3Ovm2ayPSRlmPzNYDFIWrxeh2d8fde3a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/authors/{author_id}/tickets/{id}'
    metadata:
      groupName: 'Managing Authors Ticket'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove a Author Ticket'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 9|GdiYU5BHnp4kksTZ3Ovm2ayPSRlmPzNYDFIWrxeh2d8fde3a'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author_id:
        name: author_id
        description: 'The ID of the author.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      author_id: architecto
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 9|GdiYU5BHnp4kksTZ3Ovm2ayPSRlmPzNYDFIWrxeh2d8fde3a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/authors/{author}/tickets/{ticket}'
    metadata:
      groupName: 'Managing Authors Ticket'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Replace a Author Ticket'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 9|GdiYU5BHnp4kksTZ3Ovm2ayPSRlmPzNYDFIWrxeh2d8fde3a'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author:
        name: author
        description: 'The author.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      ticket:
        name: ticket
        description: 'The ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      author: architecto
      ticket: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: true
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: true
        example: H
        type: string
        enumValues:
          - A
          - C
          - X
          - H
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: architecto
          description: 'Eius et animi quos velit et.'
          status: H
        relationships:
          author:
            data:
              id: 16
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 9|GdiYU5BHnp4kksTZ3Ovm2ayPSRlmPzNYDFIWrxeh2d8fde3a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/authors/{author}/tickets/{ticket}'
    metadata:
      groupName: 'Managing Authors Ticket'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a Author Ticket'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 9|GdiYU5BHnp4kksTZ3Ovm2ayPSRlmPzNYDFIWrxeh2d8fde3a'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      author:
        name: author
        description: 'The author.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      ticket:
        name: ticket
        description: 'The ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      author: architecto
      ticket: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: false
        example: C
        type: string
        enumValues:
          - A
          - C
          - X
          - H
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: architecto
          description: 'Eius et animi quos velit et.'
          status: C
        relationships:
          author:
            data:
              id: 16
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 9|GdiYU5BHnp4kksTZ3Ovm2ayPSRlmPzNYDFIWrxeh2d8fde3a'
    controller: null
    method: null
    route: null
    custom: []
